[gd_resource type="VisualShader" load_steps=5 format=2]

[ext_resource path="res://textureMirror.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeTexture" id=1]
texture = ExtResource( 1 )
texture_type = 1

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "screen_texture"

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "screen_uv"

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform sampler2D tex_frg_3 : hint_albedo;



void vertex() {
// Output:0

}

void fragment() {
// Input:5
	vec3 n_out5p0 = vec3(SCREEN_UV, 0.0);

// Input:4

// Texture:3
	vec4 tex_frg_3_read = texture(tex_frg_3, n_out5p0.xy);
	vec3 n_out3p0 = tex_frg_3_read.rgb;
	float n_out3p1 = tex_frg_3_read.a;

// Output:0
	ALBEDO = n_out3p0;
	ALPHA = n_out3p1;

}

void light() {
// Output:0

}
"
nodes/fragment/0/position = Vector2( 700, 40 )
nodes/fragment/3/node = SubResource( 1 )
nodes/fragment/3/position = Vector2( 460, 0 )
nodes/fragment/4/node = SubResource( 2 )
nodes/fragment/4/position = Vector2( 220, 220 )
nodes/fragment/5/node = SubResource( 3 )
nodes/fragment/5/position = Vector2( 220, 140 )
nodes/fragment/connections = PoolIntArray( 3, 0, 0, 0, 3, 1, 0, 1, 4, 0, 3, 2, 5, 0, 3, 0 )

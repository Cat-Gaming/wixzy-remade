[gd_resource type="VisualShader" load_steps=2 format=2]

[sub_resource type="VisualShaderNodeColorOp" id=1]
default_input_values = [ 0, Vector3( 0, 0, 1 ), 1, Vector3( 0, 0, 0 ) ]

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx;




void vertex() {
// Output:0

}

void fragment() {
// ColorOp:3
	vec3 n_in3p0 = vec3(0.00000, 0.00000, 1.00000);
	vec3 n_in3p1 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out3p0 = vec3(1.0) - (vec3(1.0) - n_in3p0) * (vec3(1.0) - n_in3p1);

// Output:0
	ALBEDO = n_out3p0;

}

void light() {
// Output:0

}
"
nodes/fragment/0/position = Vector2( 380, 160 )
nodes/fragment/3/node = SubResource( 1 )
nodes/fragment/3/position = Vector2( 100, 180 )
nodes/fragment/connections = PoolIntArray( 3, 0, 0, 0 )
